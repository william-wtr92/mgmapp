name: SDM x Roland CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      sonarqube:
        image: sonarqube:latest
        ports:
          - 9000:9000

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GitHub Packages
        run: echo "${{ secrets.TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Install dependencies
        run: npm install

      - name: Linting project
        run: npm run lint

      - name: Install Sonar Scanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner-cli-4.6.2.2472-linux.zip
          sudo mv sonar-scanner-4.6.2.2472-linux /opt/sonar-scanner
          sudo ln -s /opt/sonar-scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner

      - name: Docker Compose Build
        run: docker-compose -f docker-compose.yml build
        env:
          DB_CONNECTION_HOST: ${{ secrets.DB_CONNECTION_HOST }}
          DB_CONNECTION_USER: ${{ secrets.DB_CONNECTION_USER }}
          DB_CONNECTION_PWD: ${{ secrets.DB_CONNECTION_PWD }}
          DB_CONNECTION_DB: ${{ secrets.DB_CONNECTION_DB }}
          SECURITY_PASSWORD_PEPPER: ${{ secrets.SECURITY_PASSWORD_PEPPER }}
          SECURITY_JWT_SECRET: ${{ secrets.SECURITY_JWT_SECRET }}

      - name: Attendre que SonarQube soit prÃªt
        run: |
          while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:9000/api/system/status)" != "200" ]]; do 
            sleep 5; 
          done

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          wget --retry-connrefused --waitretry=5 --timeout=20 --tries=10 http://localhost:9000/api/system/status
          sonar-scanner -X\
            -Dsonar.projectKey=mgmapp \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=$SONAR_TOKEN

      - name: Docker Compose Push
        run: |
          docker-compose -f docker-compose.yml push
